// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/pvz.go
//
// Generated by this command:
//
//	mockgen -source=internal/service/pvz.go -destination=internal/service/mocks/mock_pvz_service.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	domain "pvz_service/internal/domain"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPVZServiceInterface is a mock of PVZServiceInterface interface.
type MockPVZServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPVZServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockPVZServiceInterfaceMockRecorder is the mock recorder for MockPVZServiceInterface.
type MockPVZServiceInterfaceMockRecorder struct {
	mock *MockPVZServiceInterface
}

// NewMockPVZServiceInterface creates a new mock instance.
func NewMockPVZServiceInterface(ctrl *gomock.Controller) *MockPVZServiceInterface {
	mock := &MockPVZServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPVZServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPVZServiceInterface) EXPECT() *MockPVZServiceInterfaceMockRecorder {
	return m.recorder
}

// CreatePVZ mocks base method.
func (m *MockPVZServiceInterface) CreatePVZ(ctx context.Context, pvz domain.PVZ) (*domain.PVZ, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePVZ", ctx, pvz)
	ret0, _ := ret[0].(*domain.PVZ)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePVZ indicates an expected call of CreatePVZ.
func (mr *MockPVZServiceInterfaceMockRecorder) CreatePVZ(ctx, pvz any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePVZ", reflect.TypeOf((*MockPVZServiceInterface)(nil).CreatePVZ), ctx, pvz)
}

// GetPVZs mocks base method.
func (m *MockPVZServiceInterface) GetPVZs(ctx context.Context, filter domain.PVZFilter) ([]domain.PVZ, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPVZs", ctx, filter)
	ret0, _ := ret[0].([]domain.PVZ)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPVZs indicates an expected call of GetPVZs.
func (mr *MockPVZServiceInterfaceMockRecorder) GetPVZs(ctx, filter any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPVZs", reflect.TypeOf((*MockPVZServiceInterface)(nil).GetPVZs), ctx, filter)
}
